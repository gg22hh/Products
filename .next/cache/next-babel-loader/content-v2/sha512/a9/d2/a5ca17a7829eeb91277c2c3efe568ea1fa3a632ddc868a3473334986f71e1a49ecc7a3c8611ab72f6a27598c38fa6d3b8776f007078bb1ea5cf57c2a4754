{"ast":null,"code":"import _defineProperty from \"/home/g322h/resum/project3/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"/home/g322h/resum/project3/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"isEditable\", \"rating\", \"setRating\"];\n\nvar _jsxFileName = \"/home/g322h/resum/project3/components/Rating/Rating.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport cn from \"classnames\";\nimport styles from \"./Rating.module.css\";\nimport { useEffect, useState } from \"react\";\nimport StarIcon from \"./star.svg\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport var Rating = function Rating(_ref) {\n  _s();\n\n  var _ref$isEditable = _ref.isEditable,\n      isEditable = _ref$isEditable === void 0 ? false : _ref$isEditable,\n      rating = _ref.rating,\n      setRating = _ref.setRating,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  var _useState = useState(new Array(5).fill( /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false))),\n      ratingArray = _useState[0],\n      setRatingArray = _useState[1];\n\n  useEffect(function () {\n    constructRating(rating);\n  }, [rating]);\n\n  var constructRating = function constructRating(currentRating) {\n    var updateRating = ratingArray.map(function (r, i) {\n      var _cn;\n\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        className: cn(styles.star, (_cn = {}, _defineProperty(_cn, styles.filled, i < currentRating), _defineProperty(_cn, styles.editable, isEditable), _cn)),\n        onMouseEnter: function onMouseEnter() {\n          return changeDisplay(i + 1);\n        },\n        onMouseLeave: function onMouseLeave() {\n          return changeDisplay(rating);\n        },\n        onClick: function onClick() {\n          return _onClick(i + 1);\n        },\n        children: /*#__PURE__*/_jsxDEV(StarIcon, {\n          tabIndex: isEditable ? 0 : -1,\n          onKeyDown: function onKeyDown(e) {\n            return isEditable && handleSpace(i + 1, e);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, _this);\n    });\n    setRatingArray(updateRating);\n  };\n\n  var changeDisplay = function changeDisplay(i) {\n    if (!isEditable) {\n      return;\n    }\n\n    constructRating(i);\n  };\n\n  var _onClick = function _onClick(i) {\n    if (!isEditable || !setRating) {\n      return;\n    }\n\n    setRating(i);\n  };\n\n  var handleSpace = function handleSpace(i, e) {\n    if (e.code != \"Space\" || !setRating) {\n      return;\n    }\n\n    setRating(i);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", _objectSpread(_objectSpread({}, props), {}, {\n    children: ratingArray.map(function (r, i) {\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        children: r\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, _this);\n    })\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(Rating, \"Pptcyba1hwfxkgTSKuvQraFl5xo=\");\n\n_c = Rating;\n\nvar _c;\n\n$RefreshReg$(_c, \"Rating\");","map":{"version":3,"sources":["/home/g322h/resum/project3/components/Rating/Rating.tsx"],"names":["cn","styles","useEffect","useState","StarIcon","Rating","isEditable","rating","setRating","props","Array","fill","ratingArray","setRatingArray","constructRating","currentRating","updateRating","map","r","i","star","filled","editable","changeDisplay","onClick","e","handleSpace","code"],"mappings":";;;;;;;;;;;;AACA,OAAOA,EAAP,MAAe,YAAf;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAmD,OAAnD;AACA,OAAOC,QAAP,MAAqB,YAArB;;;AAEA,OAAO,IAAMC,MAAM,GAAG,SAATA,MAAS,OAKH;AAAA;;AAAA,6BAJfC,UAIe;AAAA,MAJfA,UAIe,gCAJF,KAIE;AAAA,MAHfC,MAGe,QAHfA,MAGe;AAAA,MAFfC,SAEe,QAFfA,SAEe;AAAA,MADZC,KACY;;AACf,kBAAsCN,QAAQ,CAC1C,IAAIO,KAAJ,CAAU,CAAV,EAAaC,IAAb,eAAkB,qCAAlB,CAD0C,CAA9C;AAAA,MAAOC,WAAP;AAAA,MAAoBC,cAApB;;AAIAX,EAAAA,SAAS,CAAC,YAAM;AACZY,IAAAA,eAAe,CAACP,MAAD,CAAf;AACH,GAFQ,EAEN,CAACA,MAAD,CAFM,CAAT;;AAIA,MAAMO,eAAe,GAAG,SAAlBA,eAAkB,CAACC,aAAD,EAA2B;AAC/C,QAAMC,YAAY,GAAGJ,WAAW,CAACK,GAAZ,CAAgB,UAACC,CAAD,EAAiBC,CAAjB,EAA+B;AAAA;;AAChE,0BACI;AACI,QAAA,SAAS,EAAEnB,EAAE,CAACC,MAAM,CAACmB,IAAR,kCACRnB,MAAM,CAACoB,MADC,EACQF,CAAC,GAAGJ,aADZ,wBAERd,MAAM,CAACqB,QAFC,EAEUhB,UAFV,QADjB;AAKI,QAAA,YAAY,EAAE;AAAA,iBAAMiB,aAAa,CAACJ,CAAC,GAAG,CAAL,CAAnB;AAAA,SALlB;AAMI,QAAA,YAAY,EAAE;AAAA,iBAAMI,aAAa,CAAChB,MAAD,CAAnB;AAAA,SANlB;AAOI,QAAA,OAAO,EAAE;AAAA,iBAAMiB,QAAO,CAACL,CAAC,GAAG,CAAL,CAAb;AAAA,SAPb;AAAA,+BASI,QAAC,QAAD;AACI,UAAA,QAAQ,EAAEb,UAAU,GAAG,CAAH,GAAO,CAAC,CADhC;AAEI,UAAA,SAAS,EAAE,mBAACmB,CAAD;AAAA,mBACPnB,UAAU,IAAIoB,WAAW,CAACP,CAAC,GAAG,CAAL,EAAQM,CAAR,CADlB;AAAA;AAFf;AAAA;AAAA;AAAA;AAAA;AATJ;AAAA;AAAA;AAAA;AAAA,eADJ;AAkBH,KAnBoB,CAArB;AAoBAZ,IAAAA,cAAc,CAACG,YAAD,CAAd;AACH,GAtBD;;AAwBA,MAAMO,aAAa,GAAG,SAAhBA,aAAgB,CAACJ,CAAD,EAAe;AACjC,QAAI,CAACb,UAAL,EAAiB;AACb;AACH;;AACDQ,IAAAA,eAAe,CAACK,CAAD,CAAf;AACH,GALD;;AAOA,MAAMK,QAAO,GAAG,SAAVA,QAAU,CAACL,CAAD,EAAe;AAC3B,QAAI,CAACb,UAAD,IAAe,CAACE,SAApB,EAA+B;AAC3B;AACH;;AACDA,IAAAA,SAAS,CAACW,CAAD,CAAT;AACH,GALD;;AAOA,MAAMO,WAAW,GAAG,SAAdA,WAAc,CAACP,CAAD,EAAYM,CAAZ,EAA6C;AAC7D,QAAIA,CAAC,CAACE,IAAF,IAAU,OAAV,IAAqB,CAACnB,SAA1B,EAAqC;AACjC;AACH;;AACDA,IAAAA,SAAS,CAACW,CAAD,CAAT;AACH,GALD;;AAOA,sBACI,+CAASV,KAAT;AAAA,cACKG,WAAW,CAACK,GAAZ,CAAgB,UAACC,CAAD,EAAIC,CAAJ;AAAA,0BACb;AAAA,kBAAeD;AAAf,SAAWC,CAAX;AAAA;AAAA;AAAA;AAAA,eADa;AAAA,KAAhB;AADL;AAAA;AAAA;AAAA;AAAA,WADJ;AAOH,CAlEM;;GAAMd,M;;KAAAA,M","sourcesContent":["import { RatingProps } from \"./Rating.props\";\nimport cn from \"classnames\";\nimport styles from \"./Rating.module.css\";\nimport { useEffect, useState, KeyboardEvent } from \"react\";\nimport StarIcon from \"./star.svg\";\n\nexport const Rating = ({\n    isEditable = false,\n    rating,\n    setRating,\n    ...props\n}: RatingProps) => {\n    const [ratingArray, setRatingArray] = useState<JSX.Element[]>(\n        new Array(5).fill(<></>)\n    );\n\n    useEffect(() => {\n        constructRating(rating);\n    }, [rating]);\n\n    const constructRating = (currentRating: number) => {\n        const updateRating = ratingArray.map((r: JSX.Element, i: number) => {\n            return (\n                <span \n                    className={cn(styles.star, {\n                        [styles.filled]: i < currentRating,\n                        [styles.editable]: isEditable,\n                    })}\n                    onMouseEnter={() => changeDisplay(i + 1)}\n                    onMouseLeave={() => changeDisplay(rating)}\n                    onClick={() => onClick(i + 1)}\n                >\n                    <StarIcon\n                        tabIndex={isEditable ? 0 : -1}\n                        onKeyDown={(e: KeyboardEvent<SVGElement>) =>\n                            isEditable && handleSpace(i + 1, e)\n                        }\n                    />\n                </span>\n            );\n        });\n        setRatingArray(updateRating);\n    };\n\n    const changeDisplay = (i: number) => {\n        if (!isEditable) {\n            return;\n        }\n        constructRating(i);\n    };\n\n    const onClick = (i: number) => {\n        if (!isEditable || !setRating) {\n            return;\n        }\n        setRating(i);\n    };\n\n    const handleSpace = (i: number, e: KeyboardEvent<SVGElement>) => {\n        if (e.code != \"Space\" || !setRating) {\n            return;\n        }\n        setRating(i);\n    };\n\n    return (\n        <div {...props}>\n            {ratingArray.map((r, i) => (\n                <span key={i}>{r}</span>\n            ))}\n        </div>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}