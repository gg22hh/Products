{"ast":null,"code":"const _excluded = [\"isEditable\", \"rating\", \"setRating\"];\nvar _jsxFileName = \"/home/g322h/resum/project3/components/Rating/Rating.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport cn from \"classnames\";\nimport styles from \"./Rating.module.css\";\nimport { useEffect, useState } from \"react\";\nimport StarIcon from \"./star.svg\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Rating = _ref => {\n  let {\n    isEditable = false,\n    rating,\n    setRating\n  } = _ref,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  const {\n    0: ratingArray,\n    1: setRatingArray\n  } = useState(new Array(5).fill( /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)));\n  useEffect(() => {\n    constructRating(rating);\n  }, [rating]);\n\n  const constructRating = currentRating => {\n    const updateRating = ratingArray.map((r, i) => {\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        className: cn(styles.star, {\n          [styles.filled]: i < currentRating,\n          [styles.editable]: isEditable\n        }),\n        onMouseEnter: () => changeDisplay(i + 1),\n        onMouseLeave: () => changeDisplay(rating),\n        onClick: () => onClick(i + 1),\n        children: /*#__PURE__*/_jsxDEV(StarIcon, {\n          tabIndex: isEditable ? 0 : -1,\n          onKeyDown: e => isEditable && handleSpace(i + 1, e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this);\n    });\n    setRatingArray(updateRating);\n  };\n\n  const changeDisplay = i => {\n    if (!isEditable) {\n      return;\n    }\n\n    constructRating(i);\n  };\n\n  const onClick = i => {\n    if (!isEditable || !setRating) {\n      return;\n    }\n\n    setRating(i);\n  };\n\n  const handleSpace = (i, e) => {\n    if (e.code != \"Space\" || !setRating) {\n      return;\n    }\n\n    setRating(i);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", _objectSpread(_objectSpread({}, props), {}, {\n    children: ratingArray.map((r, i) => /*#__PURE__*/_jsxDEV(\"span\", {\n      children: r\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }, this))\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n};","map":{"version":3,"sources":["/home/g322h/resum/project3/components/Rating/Rating.tsx"],"names":["cn","styles","useEffect","useState","StarIcon","Rating","isEditable","rating","setRating","props","ratingArray","setRatingArray","Array","fill","constructRating","currentRating","updateRating","map","r","i","star","filled","editable","changeDisplay","onClick","e","handleSpace","code"],"mappings":";;;;;;;;;;;;;AACA,OAAOA,EAAP,MAAe,YAAf;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAmD,OAAnD;AACA,OAAOC,QAAP,MAAqB,YAArB;;;AAEA,OAAO,MAAMC,MAAM,GAAG,QAKH;AAAA,MALI;AACnBC,IAAAA,UAAU,GAAG,KADM;AAEnBC,IAAAA,MAFmB;AAGnBC,IAAAA;AAHmB,GAKJ;AAAA,MADZC,KACY;;AACf,QAAM;AAAA,OAACC,WAAD;AAAA,OAAcC;AAAd,MAAgCR,QAAQ,CAC1C,IAAIS,KAAJ,CAAU,CAAV,EAAaC,IAAb,eAAkB,qCAAlB,CAD0C,CAA9C;AAIAX,EAAAA,SAAS,CAAC,MAAM;AACZY,IAAAA,eAAe,CAACP,MAAD,CAAf;AACH,GAFQ,EAEN,CAACA,MAAD,CAFM,CAAT;;AAIA,QAAMO,eAAe,GAAIC,aAAD,IAA2B;AAC/C,UAAMC,YAAY,GAAGN,WAAW,CAACO,GAAZ,CAAgB,CAACC,CAAD,EAAiBC,CAAjB,KAA+B;AAChE,0BACI;AACI,QAAA,SAAS,EAAEnB,EAAE,CAACC,MAAM,CAACmB,IAAR,EAAc;AACvB,WAACnB,MAAM,CAACoB,MAAR,GAAiBF,CAAC,GAAGJ,aADE;AAEvB,WAACd,MAAM,CAACqB,QAAR,GAAmBhB;AAFI,SAAd,CADjB;AAKI,QAAA,YAAY,EAAE,MAAMiB,aAAa,CAACJ,CAAC,GAAG,CAAL,CALrC;AAMI,QAAA,YAAY,EAAE,MAAMI,aAAa,CAAChB,MAAD,CANrC;AAOI,QAAA,OAAO,EAAE,MAAMiB,OAAO,CAACL,CAAC,GAAG,CAAL,CAP1B;AAAA,+BASI,QAAC,QAAD;AACI,UAAA,QAAQ,EAAEb,UAAU,GAAG,CAAH,GAAO,CAAC,CADhC;AAEI,UAAA,SAAS,EAAGmB,CAAD,IACPnB,UAAU,IAAIoB,WAAW,CAACP,CAAC,GAAG,CAAL,EAAQM,CAAR;AAHjC;AAAA;AAAA;AAAA;AAAA;AATJ;AAAA;AAAA;AAAA;AAAA,cADJ;AAkBH,KAnBoB,CAArB;AAoBAd,IAAAA,cAAc,CAACK,YAAD,CAAd;AACH,GAtBD;;AAwBA,QAAMO,aAAa,GAAIJ,CAAD,IAAe;AACjC,QAAI,CAACb,UAAL,EAAiB;AACb;AACH;;AACDQ,IAAAA,eAAe,CAACK,CAAD,CAAf;AACH,GALD;;AAOA,QAAMK,OAAO,GAAIL,CAAD,IAAe;AAC3B,QAAI,CAACb,UAAD,IAAe,CAACE,SAApB,EAA+B;AAC3B;AACH;;AACDA,IAAAA,SAAS,CAACW,CAAD,CAAT;AACH,GALD;;AAOA,QAAMO,WAAW,GAAG,CAACP,CAAD,EAAYM,CAAZ,KAA6C;AAC7D,QAAIA,CAAC,CAACE,IAAF,IAAU,OAAV,IAAqB,CAACnB,SAA1B,EAAqC;AACjC;AACH;;AACDA,IAAAA,SAAS,CAACW,CAAD,CAAT;AACH,GALD;;AAOA,sBACI,+CAASV,KAAT;AAAA,cACKC,WAAW,CAACO,GAAZ,CAAgB,CAACC,CAAD,EAAIC,CAAJ,kBACb;AAAA,gBAAeD;AAAf,OAAWC,CAAX;AAAA;AAAA;AAAA;AAAA,YADH;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH,CAlEM","sourcesContent":["import { RatingProps } from \"./Rating.props\";\nimport cn from \"classnames\";\nimport styles from \"./Rating.module.css\";\nimport { useEffect, useState, KeyboardEvent } from \"react\";\nimport StarIcon from \"./star.svg\";\n\nexport const Rating = ({\n    isEditable = false,\n    rating,\n    setRating,\n    ...props\n}: RatingProps) => {\n    const [ratingArray, setRatingArray] = useState<JSX.Element[]>(\n        new Array(5).fill(<></>)\n    );\n\n    useEffect(() => {\n        constructRating(rating);\n    }, [rating]);\n\n    const constructRating = (currentRating: number) => {\n        const updateRating = ratingArray.map((r: JSX.Element, i: number) => {\n            return (\n                <span \n                    className={cn(styles.star, {\n                        [styles.filled]: i < currentRating,\n                        [styles.editable]: isEditable,\n                    })}\n                    onMouseEnter={() => changeDisplay(i + 1)}\n                    onMouseLeave={() => changeDisplay(rating)}\n                    onClick={() => onClick(i + 1)}\n                >\n                    <StarIcon\n                        tabIndex={isEditable ? 0 : -1}\n                        onKeyDown={(e: KeyboardEvent<SVGElement>) =>\n                            isEditable && handleSpace(i + 1, e)\n                        }\n                    />\n                </span>\n            );\n        });\n        setRatingArray(updateRating);\n    };\n\n    const changeDisplay = (i: number) => {\n        if (!isEditable) {\n            return;\n        }\n        constructRating(i);\n    };\n\n    const onClick = (i: number) => {\n        if (!isEditable || !setRating) {\n            return;\n        }\n        setRating(i);\n    };\n\n    const handleSpace = (i: number, e: KeyboardEvent<SVGElement>) => {\n        if (e.code != \"Space\" || !setRating) {\n            return;\n        }\n        setRating(i);\n    };\n\n    return (\n        <div {...props}>\n            {ratingArray.map((r, i) => (\n                <span key={i}>{r}</span>\n            ))}\n        </div>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}